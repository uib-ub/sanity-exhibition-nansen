@startuml "deployment"
  !include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml
' uncomment the following line and comment the first to use locally
' !include C4_Deployment.puml

AddElementTag("fallback", $bgColor="#c0c0c0")
AddRelTag("fallback", $textColor="#c0c0c0", $lineColor="#438DD5")

WithoutPropertyHeader()

' calculated legend is used (activated in last line)
' LAYOUT_WITH_LEGEND()

title Deployment Diagram for Muna

Deployment_Node(vercel, "Vercel", "Node", "Vercel cloud"){
    AddProperty("Location", "Cloud")
    Deployment_Node_R(vercel_studio, "studio", "Node"){
      Deployment_Node_R(vercel_studio_server, "studio_server", "Node"){
        Container(vercel_studio_spa, "Single Page Application", "JavaScript and React", "Provides all of the content editing functionality to the editor via their web browser.")
      }
    }
    AddProperty("Location", "Cloud")
    Deployment_Node_R(vercel_web, "web", "Node"){
      Deployment_Node_R(vercel_web_server, "web_server", "Node"){
        Container(vercel_web_next_app, "Next Application", "JavaScript and React", "Provides the Next app to the visitors web browser.")
        Container(vercel_web_next_app_api, "Next API", "JavaScript and React", "Provides manifests to the visitors app via their web browser.")
      }
    }
    AddProperty("Location", "Cloud")
    Deployment_Node_R(vercel_manifest, "marcus manifest", "Node"){
      Deployment_Node_R(vercel_manifest_server, "manifest_server", "Node"){
        Container(vercel_manifest_next_app_api, "Next API", "JavaScript and React", "Provides manifests to the visitors app via their web browser.")
      }
    }
}

Deployment_Node(sanity, "Sanity", "Go", "Google Cloud"){
    AddProperty("Location", "Cloud")
    Deployment_Node_R(sanity_API, "sanity-api", "Node", "An API residing in the Google Cloud."){
      Container(sanitydb_api, "Single Page Application", "JavaScript and React", "Provides all of the content editing functionality to the editor via their web browser.")
    }
    AddProperty("Location", "Google Cloud")
    Deployment_Node_L(sanitydb, "sanity-db", "PostgreSQL", "The primary database server."){
      ContainerDb(db, "Database", "Relational Database Schema", "Stores content")
    }
}

Deployment_Node(editor_device, "Editor's computer", "Mircosoft Windows, Apple macOS or mobile device"){
    Deployment_Node(editor_browser, "Web Browser", "Google Chrome, Mozilla Firefox, Apple Safari or Microsoft Edge"){
        Container(editor_spa, "Single Page Application", "JavaScript and React", "Provides all of the content editing functionality to the editor via their web browser.")
    }
}

Deployment_Node(user_device, "Visitor's computer", "Mircosoft Windows, Apple macOS or mobile device"){
    Deployment_Node(user_browser, "Web Browser", "Google Chrome, Mozilla Firefox, Apple Safari or Microsoft Edge"){
        Container(user_spa, "Single Page Application", "JavaScript and React", "Provides the user with the content to their web browser.")
    }
}

Rel_D(vercel_studio_spa, editor_spa, "Delivers the app to the editors's web browser")
Rel_D(vercel_web_next_app, user_spa, "Delivers the app to the users's web browser")
Rel_D(vercel_web_next_app_api, user_spa, "Delivers data to the users's web browser")
Rel_D(sanitydb_api, vercel_web_next_app, "Delivers data to the web app build step")
Rel_D(vercel_manifest_next_app_api, user_spa, "Delivers manifests to the web app build step")
Rel_D(sanitydb_api, editor_spa, "Delivers data to the editor's SPA")
Rel_R(db, sanitydb_api, "Delivers data to the api")

SHOW_LEGEND()
@enduml